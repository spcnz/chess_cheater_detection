version: '2'
services:
  broker1:
    image: confluentinc/cp-kafka:7.3.1
    container_name: broker1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://broker1:29092,CONTROLLER://broker1:9095,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:9095,2@broker2:9095,3@broker3:9095'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: False
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    volumes:
      - ./update_run.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
  
  broker2:
    image: confluentinc/cp-kafka:7.3.1
    container_name: broker2
    ports:
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:29093,CONTROLLER://broker2:9095,PLAINTEXT_HOST://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker2:29093,PLAINTEXT_HOST://localhost:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:9095,2@broker2:9095,3@broker3:9095'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: False
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    volumes:
      - ./update_run.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
  
  broker3:
    image: confluentinc/cp-kafka:7.3.1
    container_name: broker3
    ports:
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://broker3:29094,CONTROLLER://broker3:9095,PLAINTEXT_HOST://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker3:29094,PLAINTEXT_HOST://localhost:9094'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:9095,2@broker2:9095,3@broker3:9095'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: False
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - ./update_run.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  init:
    image: confluentinc/cp-kafka:7.3.1
    depends_on:
      - broker1
      - broker2
      - broker3
      - schema-registry
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until broker is reachable
      kafka-topics --bootstrap-server broker1:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.moves --replication-factor 3 --partitions 30 --config cleanup.policy=delete --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.players --replication-factor 3 --partitions 30 --config cleanup.policy=compact --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.games --replication-factor 3 --partitions 30 --config cleanup.policy=delete --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.game-results --replication-factor 3 --partitions 30 --config cleanup.policy=delete --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.move.score --replication-factor 3 --partitions 30 --config cleanup.policy=delete --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic game-score-store --replication-factor 3 --partitions 30 --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic unique-updates-store --replication-factor 3 --partitions 30  --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.player.kpi -replication-factor 3 --partitions 30  --config cleanup.policy=compact --config compression.type=gzip
      kafka-topics --bootstrap-server broker1:29092 --create --if-not-exists --topic yauza.player.suspicious -replication-factor 3 --partitions 30 --config compression.type=gzip

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker1:29092 --list
      
      echo -e 'Registering schemas'
      python /init/register_schema.py http://schema-registry:8081 
      "
    volumes:
      - ./init:/init/

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: mydb # Name of the database
      INFLUXDB_ADMIN_ENABLED: "true"
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin # Please choose a safer password
    volumes:
      - influxdb_data:/var/lib/influxdb

  connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    depends_on:
      - broker1
      - broker2
      - broker3
      - influxdb
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093,broker3:29094'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'quickstart'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-configs'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status'
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '3'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '3'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '3'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
    volumes:
      - ./init/init-kafka-connect.sh:/usr/local/bin/init-kafka-connect.sh
    # command: >
    #   bash -c "chmod +x /usr/local/bin/init-kafka-connect.sh && /etc/confluent/docker/run"
    command: 
      - bash 
      - -c 
      - |
        echo "Installing connector plugins"
        confluent-hub install --no-prompt confluentinc/kafka-connect-influxdb:1.1.2
        chmod +x /usr/local/bin/init-kafka-connect.sh
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run 
    # entrypoint: [ "/usr/local/bin/init-kafka-connect.sh" ]



  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin # Please choose a safer password
    depends_on:
      - influxdb
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  zookeeper_data:
  zookeeper_log:
  grafana_data:
  influxdb_data: