kafka {
  streams {
    application.id = "chess-analyzer-stream-test"

    schema.registry.url = "http://localhost:8081"

    bootstrap.servers = "localhost:9092,localhost:9093,localhost:9094"

    commit.interval.ms = 0

    statestore.cache.max.bytes = 102400 // 100KB

    num.stream.threads = 1

    state.dir = "/tmp/kafka-streams"

    replication.factor = 3
    processing.guarantee = "at_least_once"
   }

   consumer {
    max.poll.records = 1000
   }

   producer {
    acks = "all"
    compression.type = "gzip"
    linger.ms = 0
   }

   topic {
     compression.type = "gzip"
     min.insync.replicas = 2
   }
}


chess-analyzer {
  topic {
    input {
      game = "yauza.games"
      move = "yauza.moves"
      game-result = "yauza.game.results"
      player = "yauza.players"
    }
    sink {
      player-kpi = "yauza.player.kpi"
      player-move-score = "yauza.move.score"
      suspicious-player = "yauza.player.suspicious"
    }
  }
  store {
    game= "game-store"
    game-score = "game-score-store"
    unique-updates = "unique-updates-store"
  }
  engine {
    path = "/home/specnaz/code/master/chess-analyzer/src/test/resources/engine/stockfish"
  }
}
